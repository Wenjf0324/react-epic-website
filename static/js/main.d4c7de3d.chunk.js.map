{"version":3,"sources":["components/logo.svg","components/Header.js","components/Footer.js","components/Loading.js","App.js","reportWebVitals.js","index.js","models/index.js","stores/user.js","stores/history.js","stores/image.js","stores/auth.js","stores/index.js"],"names":["Header","styled","header","Logo","img","StyledLink","NavLink","Login","div","StyledButton","Button","Component","observer","history","useHistory","useStores","UserStore","AuthStore","src","LogoUrl","to","activeClassName","exact","currentUser","attributes","username","type","onClick","logout","console","log","push","Footer","footer","Loading","Home","lazy","History","About","Register","App","fallback","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","AV","init","appId","appKey","serverURL","Auth","register","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","loginedUser","error","login","logIn","logOut","getCurrentUser","current","Uploader","add","file","filename","item","Object","avFile","File","set","save","serverFile","find","page","limit","query","Query","include","skip","descending","equalTo","results","catch","window","makeObservable","this","observable","action","newList","list","concat","isLoading","append","length","hasMore","message","finally","newFilename","newFile","isUploading","err","values","pullUser","resetUser","HistoryStore","reset","ImageStore","context","createContext","stores","useContext"],"mappings":"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","file":"static/js/main.d4c7de3d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\r\nimport LogoUrl from \"./logo.svg\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { Button } from \"antd\";\r\nimport { useStores } from \"../stores\";\r\nimport { observer } from \"mobx-react\";\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px 100px;\r\n  background-color: #02101f;\r\n  color: #fff;\r\n`;\r\nconst Logo = styled.img`\r\n  height: 30px;\r\n`;\r\nconst StyledLink = styled(NavLink)`\r\n  color: #fff;\r\n  margin-left: 30px;\r\n\r\n  &.active {\r\n    border-bottom: 1px solid #fff;\r\n  }\r\n`;\r\nconst Login = styled.div`\r\n  margin-left: auto;\r\n`;\r\nconst StyledButton = styled(Button)`\r\n  margin-left: 10px;\r\n`;\r\n\r\n//observer的作用是监控数据的变化\r\nconst Component = observer(() => {\r\n  const history = useHistory();\r\n  const { UserStore, AuthStore } = useStores();\r\n\r\n  const handleLogout = () => {\r\n    AuthStore.logout();\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    console.log(\"跳转到登录页面\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const handleRegister = () => {\r\n    console.log(\"跳转到注册页面\");\r\n    history.push(\"/register\");\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      <Logo src={LogoUrl} />\r\n      <nav>\r\n        <StyledLink to=\"/\" activeClassName=\"active\" exact>\r\n          首页\r\n        </StyledLink>\r\n        <StyledLink to=\"/history\" activeClassName=\"active\">\r\n          上传历史\r\n        </StyledLink>\r\n        <StyledLink to=\"/about\" activeClassName=\"active\">\r\n          关于\r\n        </StyledLink>\r\n      </nav>\r\n      <Login>\r\n        {UserStore.currentUser ? (\r\n          <>\r\n            {UserStore.currentUser.attributes.username}\r\n            <StyledButton type=\"primary\" onClick={handleLogout}>\r\n              注销\r\n            </StyledButton>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <StyledButton type=\"primary\" onClick={handleLogin}>\r\n              登录\r\n            </StyledButton>\r\n            <StyledButton type=\"primary\" onClick={handleRegister}>\r\n              注册\r\n            </StyledButton>\r\n          </>\r\n        )}\r\n      </Login>\r\n    </Header>\r\n  );\r\n});\r\n\r\nexport default Component;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Footer = styled.footer`\r\n  padding: 10px 100px;\r\n  text-align: center;\r\n  font-size: 12px;\r\n  color: #aaa;\r\n`;\r\n\r\nfunction Component() {\r\n  return (\r\n    <Footer>\r\n      <p>Footer</p>\r\n    </Footer>\r\n  );\r\n}\r\n\r\nexport default Component;\r\n","import React from \"react\";\r\n\r\nexport default function Loading() {\r\n  return <div>Loading...</div>;\r\n}\r\n","import React, { Suspense, lazy } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Loading from \"./components/Loading\";\nimport { Switch, Route } from \"react-router-dom\";\n\n// import Home from \"./pages/Home\";\n// import History from \"./pages/History\";\n// import About from \"./pages/About\";\n\n//路由懒加载\nconst Home = lazy(() => import(\"./pages/Home\"));\nconst History = lazy(() => import(\"./pages/History\"));\nconst About = lazy(() => import(\"./pages/About\"));\nconst Login = lazy(() => import(\"./pages/Login\"));\nconst Register = lazy(() => import(\"./pages/Register\"));\n\nconsole.log(Loading);\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <main>\n        <Suspense fallback={<Loading />}>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/history\" exact component={History} />\n            <Route path=\"/about\" exact component={About} />\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/register\" exact component={Register} />\n          </Switch>\n        </Suspense>\n      </main>\n\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"antd/dist/antd.css\";\nimport Model from \"./models\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n","//引用SDK\r\nimport AV, { Query, User } from \"leancloud-storage\";\r\n\r\n//初始化\r\nAV.init({\r\n  appId: \"nluzu3wJlk0JtpY7MO3CPWX0-gzGzoHsz\",\r\n  appKey: \"NPJsJeTuREDxsJKmxVliQgBp\",\r\n  serverURL: \"https://nluzu3wj.lc-cn-n1-shared.com\",\r\n});\r\n\r\nconst Auth = {\r\n  //注册接口\r\n  register(username, password) {\r\n    let user = new User();\r\n    user.setUsername(username);\r\n    user.setPassword(password);\r\n    return new Promise((resolve, reject) => {\r\n      user.signUp().then(\r\n        (loginedUser) => resolve(loginedUser),\r\n        (error) => reject(error)\r\n      );\r\n    });\r\n  },\r\n\r\n  //登录接口\r\n  login(username, password) {\r\n    return new Promise((resolve, reject) => {\r\n      User.logIn(username, password).then(\r\n        (loginedUser) => resolve(loginedUser),\r\n        (error) => reject(error)\r\n      );\r\n    });\r\n  },\r\n\r\n  //注销\r\n  logout() {\r\n    User.logOut();\r\n  },\r\n\r\n  //获取当前用户\r\n  getCurrentUser() {\r\n    return User.current();\r\n  },\r\n};\r\n\r\nconst Uploader = {\r\n  //上传图片接口\r\n  add(file, filename) {\r\n    const item = new AV.Object(\"Image\");\r\n    const avFile = new AV.File(filename, file);\r\n    item.set(\"filename\", filename); //文件名\r\n    item.set(\"owner\", AV.User.current()); //作者\r\n    item.set(\"url\", avFile); //文件url\r\n    return new Promise((resolve, reject) => {\r\n      item.save().then(\r\n        (serverFile) => {\r\n          resolve(serverFile);\r\n        },\r\n        (error) => {\r\n          reject(error);\r\n        }\r\n      );\r\n    });\r\n  },\r\n  //查询数据\r\n  find({ page = 0, limit = 10 }) {\r\n    const query = new AV.Query(\"Image\");\r\n    query.include(\"owner\"); //查询包含owner字段的所有信息\r\n    query.limit(limit); //只获取limit条\r\n    query.skip(page * limit); //跳过的信息\r\n    query.descending(\"createdAt\"); //降序排列\r\n    query.equalTo(\"owner\", AV.User.current()); //只限制当前用户\r\n    return new Promise((resolve, reject) => {\r\n      query\r\n        .find()\r\n        .then((results) => resolve(results))\r\n        .catch((error) => reject(error));\r\n    });\r\n  },\r\n};\r\n\r\nwindow.Uploader = Uploader;\r\n\r\nexport { Auth, Uploader };\r\n","import { observable, action, makeObservable } from \"mobx\";\r\nimport { Auth } from \"../models\";\r\n\r\nclass UserStore {\r\n  //解决版本问题带来的用户名不同步\r\n  constructor() {\r\n    makeObservable(this);\r\n  }\r\n\r\n  @observable currentUser = null;\r\n\r\n  @action pullUser() {\r\n    this.currentUser = Auth.getCurrentUser();\r\n  }\r\n\r\n  @action resetUser() {\r\n    this.currentUser = null;\r\n  }\r\n}\r\n\r\n//导出对象\r\nexport default new UserStore();\r\n","import { observable, action, makeObservable } from \"mobx\";\r\nimport { Uploader } from \"../models\";\r\nimport { message } from \"antd\";\r\n\r\nclass HistoryStore {\r\n  //解决版本问题带来的用户名不同步\r\n  constructor() {\r\n    makeObservable(this);\r\n  }\r\n\r\n  @observable list = []; //要展示的数据\r\n  @observable isLoading = false; //是否在加载中\r\n  @observable hasMore = true; //当前数据是否加载完，是否有更多的数据\r\n  @observable page = 0; //当前页\r\n  limit = 10;\r\n\r\n  @action append(newList) {\r\n    this.list = this.list.concat(newList); //将新数据插入到原来的list中\r\n  }\r\n\r\n  @action find() {\r\n    this.isLoading = true;\r\n    //调用find()接口\r\n    Uploader.find({ page: this.page, limit: this.limit })\r\n      .then((newList) => {\r\n        this.append(newList);\r\n        this.page++;\r\n        //判断数据是否加载完\r\n        if (newList.length < this.limit) {\r\n          this.hasMore = false;\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"加载数据失败\");\r\n      })\r\n      .finally(() => {\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  @action reset() {\r\n    this.list = []; //要展示的数据\r\n    this.isLoading = false; //是否在加载中\r\n    this.hasMore = true; //当前数据是否加载完，是否有更多的数据\r\n    this.page = 0; //当前页\r\n  }\r\n}\r\n\r\nexport default new HistoryStore();\r\n","import { observable, action, makeObservable } from \"mobx\";\r\nimport { Uploader } from \"../models\";\r\nimport { message } from \"antd\";\r\n\r\nclass ImageStore {\r\n  //解决版本问题带来的用户名不同步\r\n  constructor() {\r\n    makeObservable(this);\r\n  }\r\n\r\n  @observable filename = \"\";\r\n  @observable file = null; //本地文件\r\n  @observable isUploading = false;\r\n  @observable serverFile = null; //服务器传回来的文件\r\n\r\n  @action setFilename(newFilename) {\r\n    this.filename = newFilename;\r\n  }\r\n\r\n  @action setFile(newFile) {\r\n    this.file = newFile;\r\n  }\r\n\r\n  @action upload() {\r\n    this.isUploading = true;\r\n    this.serverFile = null;\r\n    //创建Promise 便于获取错误\r\n    return new Promise((resolve, reject) => {\r\n      //调用上传图片接口\r\n      Uploader.add(this.file, this.filename)\r\n        .then((serverFile) => {\r\n          this.serverFile = serverFile;\r\n          resolve(serverFile);\r\n        })\r\n        .catch((err) => {\r\n          message.error(\"上传失败\");\r\n          reject(err);\r\n        })\r\n        .finally(() => {\r\n          this.isUploading = false;\r\n        });\r\n    });\r\n  }\r\n\r\n  @action reset() {\r\n    this.isUploading = false;\r\n    this.serverFile = null; //服务器传回来的文件\r\n  }\r\n}\r\n\r\n//导出对象\r\nexport default new ImageStore();\r\n","import { observable, action, makeObservable } from \"mobx\";\r\nimport { Auth } from \"../models\";\r\nimport UserStore from \"./user\";\r\nimport HistoryStore from \"./history\";\r\nimport ImageStore from \"./image\";\r\nimport { message } from \"antd\";\r\n\r\nclass AuthStore {\r\n  //解决版本问题带来的用户名不同步\r\n  constructor() {\r\n    makeObservable(this);\r\n  }\r\n  @observable values = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  @action setUsername(username) {\r\n    this.values.username = username;\r\n  }\r\n\r\n  @action setPassword(password) {\r\n    this.values.password = password;\r\n  }\r\n\r\n  @action login() {\r\n    return new Promise((resolve, reject) => {\r\n      Auth.login(this.values.username, this.values.password)\r\n        .then((user) => {\r\n          UserStore.pullUser();\r\n          resolve(user);\r\n        })\r\n        .catch((err) => {\r\n          UserStore.resetUser();\r\n          message.error(\"登录失败\");\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n\r\n  @action register() {\r\n    return new Promise((resolve, reject) => {\r\n      Auth.register(this.values.username, this.values.password)\r\n        .then((user) => {\r\n          UserStore.pullUser();\r\n          resolve(user);\r\n        })\r\n        .catch((err) => {\r\n          UserStore.resetUser();\r\n          message.error(\"注册失败\");\r\n          reject(err);\r\n        });\r\n    });\r\n  }\r\n\r\n  @action logout() {\r\n    Auth.logout();\r\n    UserStore.resetUser();\r\n    HistoryStore.reset();\r\n    ImageStore.reset();\r\n  }\r\n}\r\n\r\nexport default new AuthStore();\r\n","import React, { createContext, useContext } from \"react\";\r\nimport AuthStore from \"./auth\";\r\nimport UserStore from \"./user\";\r\nimport ImageStore from \"./image\";\r\nimport HistoryStore from \"./history\";\r\n\r\nconst context = createContext({\r\n  AuthStore,\r\n  UserStore,\r\n  ImageStore,\r\n  HistoryStore,\r\n});\r\n\r\n//本地测试\r\nwindow.stores = {\r\n  AuthStore,\r\n  UserStore,\r\n  ImageStore,\r\n  HistoryStore,\r\n};\r\n\r\nexport const useStores = () => useContext(context);\r\n"],"sourceRoot":""}