{"version":3,"sources":["pages/Login.js"],"names":["Wraper","styled","div","Title","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","AuthStore","useStores","history","useHistory","validateUsername","rule","value","a","test","Promise","reject","length","resolve","name","onFinish","values","console","log","setUsername","username","setPassword","password","login","then","push","catch","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","min","max","Password","type","htmlType"],"mappings":"gPAMMA,EAASC,IAAOC,IAAV,iKAQNC,EAAQF,IAAOG,GAAV,2EAMLC,EAAS,CACbC,SAAU,CACRC,KAAM,GAERC,WAAY,CACVD,KAAM,KAGJE,EAAa,CACjBD,WAAY,CACVE,OAAQ,EACRH,KAAM,KA0FKI,UAtFD,WAAO,IACXC,EAAcC,cAAdD,UACFE,EAAUC,cAoBVC,EAAgB,uCAAG,WAAOC,EAAMC,GAAb,SAAAC,EAAA,0DACnB,KAAKC,KAAKF,GADS,yCACMG,QAAQC,OAAO,iEADrB,YAEnBJ,EAAMK,OAAS,GAAKL,EAAMK,OAAS,IAFhB,yCAGdF,QAAQC,OAAO,6CAHD,OAIvBD,QAAQG,UAJe,2CAAH,wDAOtB,OACE,eAACxB,EAAD,WACE,cAACG,EAAD,2BACA,eAAC,IAAD,2BACME,GADN,IAEEoB,KAAK,QACLC,SA/BW,SAACC,GAChBC,QAAQC,IAAI,WAAYF,GACxBf,EAAUkB,YAAYH,EAAOI,UAC7BnB,EAAUoB,YAAYL,EAAOM,UAC7BrB,EAAUsB,QACPC,MAAK,WACJP,QAAQC,IAAI,gEACZf,EAAQsB,KAAK,QAEdC,OAAM,WACLT,QAAQC,IAAI,gCAsBZS,eAlBiB,SAACC,GACtBX,QAAQC,IAAI,UAAWU,IAarB,UAME,cAAC,IAAKC,KAAN,CACEC,MAAM,qBACNhB,KAAK,WACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,kCAEX,CACEC,UAAW7B,IATjB,SAcE,cAAC,IAAD,MAGF,cAAC,IAAKwB,KAAN,CACEC,MAAM,eACNhB,KAAK,WACLiB,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,4BAEX,CACEE,IAAK,EACLF,QAAS,mCAEX,CACEG,IAAK,GACLH,QAAS,qCAdf,SAkBE,cAAC,IAAMI,SAAP,MAGF,cAAC,IAAKR,KAAN,2BAAe/B,GAAf,aACE,cAAC,IAAD,CAAQwC,KAAK,UAAUC,SAAS,SAAhC","file":"static/js/10.a84557ea.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Form, Input, Button, Checkbox } from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport { useStores } from \"../stores\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Wraper = styled.div`\r\n  max-width: 600px;\r\n  margin: 30px auto;\r\n  box-shadow: 2px 2px 4px 0 rgba(0, 0, 0, 0.2);\r\n  border-radius: 4px;\r\n  padding: 20px;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\n// layout和tailLayout用于确定元素的位置\r\nconst layout = {\r\n  labelCol: {\r\n    span: 6,\r\n  },\r\n  wrapperCol: {\r\n    span: 18,\r\n  },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 6,\r\n    span: 18,\r\n  },\r\n};\r\n\r\nconst Login = () => {\r\n  const { AuthStore } = useStores();\r\n  const history = useHistory();\r\n\r\n  const onFinish = (values) => {\r\n    console.log(\"Success:\", values);\r\n    AuthStore.setUsername(values.username); //获取用户名\r\n    AuthStore.setPassword(values.password); //获取密码\r\n    AuthStore.login()\r\n      .then(() => {\r\n        console.log(\"登录成功，跳转到首页\");\r\n        history.push(\"/\");\r\n      })\r\n      .catch(() => {\r\n        console.log(\"登录失败\");\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  const validateUsername = async (rule, value) => {\r\n    if (/\\W/.test(value)) return Promise.reject(\"只能是字母数字下划线\");\r\n    if (value.length < 4 || value.length > 10)\r\n      return Promise.reject(\"长度为4~10个字符\");\r\n    Promise.resolve();\r\n  };\r\n\r\n  return (\r\n    <Wraper>\r\n      <Title>登录</Title>\r\n      <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"用户名\"\r\n          name=\"username\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"输入用户名\",\r\n            },\r\n            {\r\n              validator: validateUsername,\r\n            },\r\n          ]}\r\n        >\r\n          {/* rules用于校验，true表示必须填写 */}\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"密码\"\r\n          name=\"password\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"输入密码\",\r\n            },\r\n            {\r\n              min: 4,\r\n              message: \"最少4个字符\",\r\n            },\r\n            {\r\n              max: 10,\r\n              message: \"最大10个字符\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            提交\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </Wraper>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}