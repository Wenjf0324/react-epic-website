{"version":3,"sources":["components/Uploader.js","components/Tips.js","pages/Home.js"],"names":["Result","styled","div","H1","h1","Image","img","Dragger","Upload","Component","observer","useStores","ImageStore","UserStore","ref1","useRef","ref2","store","useLocalStore","width","setWidth","height","setHeight","serverFile","attributes","url","widthStr","heightStr","props","showUploadList","beforeUpload","file","setFile","setFilename","name","currentUser","message","warning","test","type","size","error","upload","then","console","log","catch","tip","spinning","isUploading","className","InboxOutlined","target","href","filename","src","ref","onChange","current","value","placeholder","fullStr","Tips","children","Home","Uploader"],"mappings":"mPAOMA,EAASC,IAAOC,IAAV,+FAMNC,EAAKF,IAAOG,GAAV,sEAKFC,EAAQJ,IAAOK,IAAV,iDAIHC,EAAYC,IAAZD,QA+IOE,EA7IGC,aAAS,WAAO,IAAD,EACGC,cAA1BC,EADuB,EACvBA,WAAYC,EADW,EACXA,UACdC,EAAOC,mBACPC,EAAOD,mBAGPE,EAAQC,aAAc,iBAAO,CAEjCC,MAAO,KACPC,SAHiC,SAGxBD,GACPF,EAAME,MAAQA,GAEhB,eACE,OAAOF,EAAME,MAAN,aAAoBF,EAAME,OAAU,IAI7CE,OAAQ,KACRC,UAZiC,SAYvBD,GACRJ,EAAMI,OAASA,GAEjB,gBACE,OAAOJ,EAAMI,OAAN,aAAqBJ,EAAMI,QAAW,IAG/C,cACE,OACET,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,IAChD,gBACAR,EAAMS,SACNT,EAAMU,eAaNC,EAAQ,CACZC,gBAAgB,EAChBC,aAAc,SAACC,GAMb,OAJAnB,EAAWoB,QAAQD,GACnBnB,EAAWqB,YAAYF,EAAKG,MAGE,OAA1BrB,EAAUsB,aACZC,IAAQC,QAAQ,qDACT,GAIJ,wCAAwCC,KAAKP,EAAKQ,MAKnDR,EAAKS,KAAO,SACdJ,IAAQK,MAAM,+BACP,IAET7B,EAAW8B,SACRC,MAAK,SAACpB,GACLqB,QAAQC,IAAI,4BACZD,QAAQC,IAAItB,MAEbuB,OAAM,WACLF,QAAQC,IAAI,gCAET,IAhBLT,IAAQK,MAAM,0EACP,KAmBb,OACE,gCACE,cAAC,IAAD,CAAMM,IAAI,qBAAMC,SAAUpC,EAAWqC,YAArC,SACE,eAAC1C,EAAD,2BAAaqB,GAAb,cACE,mBAAGsB,UAAU,uBAAb,SACE,cAACC,EAAA,EAAD,MAEF,mBAAGD,UAAU,kBAAb,oEACA,mBAAGA,UAAU,kBAAb,uHAMHtC,EAAWW,WACV,eAACvB,EAAD,WACE,cAACG,EAAD,uCACA,+BACE,0DACA,6BACE,mBACEiD,OAAO,SACPC,KAAMzC,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,IAFxD,SAIGb,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,QAIrD,oDACA,6BAAKb,EAAW0C,WAEhB,0DACA,6BACE,cAACjD,EAAD,CACEkD,IAAK3C,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,QAIzD,0DACA,+BACE,uBACE+B,IAAK1C,EACL2C,SArFU,WACtBxC,EAAMG,SAASN,EAAK4C,QAAQC,QAqFhBC,YAAY,qDAEd,uBACEJ,IAAKxC,EACLyC,SAtFW,WACvBxC,EAAMK,UAAUN,EAAK0C,QAAQC,QAsFjBC,YAAY,wDAGhB,6BACE,mBAAGR,OAAO,UAAUC,KAAMpC,EAAM4C,QAAhC,SACG5C,EAAM4C,kBAKb,WC3JJC,EAAO7D,IAAOC,IAAV,+HAaKO,EALGC,aAAS,YAAmB,IAAhBqD,EAAe,EAAfA,SACpBlD,EAAcF,cAAdE,UACR,OAAO,mCAAGA,EAAUsB,YAAc,KAAO,cAAC2B,EAAD,UAAOC,SCT5CC,EAAOtD,aAAS,WACEC,cAAdE,UAIR,OACE,qCACE,cAAC,EAAD,aAAMkD,UAAQ,GAAd,6DAEA,cAACE,EAAD,UAKSD","file":"static/js/9.b46855e5.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useStores } from \"../stores\";\r\nimport { observer, useLocalStore } from \"mobx-react\";\r\nimport { Upload, message, Spin } from \"antd\";\r\nimport { InboxOutlined } from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Result = styled.div`\r\n  margin-top: 30px;\r\n  border: 1px dashed #ccc;\r\n  padding: 20px;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n  margin: 20px 0;\r\n  text-align: center;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  max-width: 300px;\r\n`;\r\n\r\nconst { Dragger } = Upload;\r\n\r\nconst Component = observer(() => {\r\n  const { ImageStore, UserStore } = useStores();\r\n  const ref1 = useRef();\r\n  const ref2 = useRef();\r\n\r\n  //返回一个对象\r\n  const store = useLocalStore(() => ({\r\n    //宽\r\n    width: null,\r\n    setWidth(width) {\r\n      store.width = width;\r\n    },\r\n    get widthStr() {\r\n      return store.width ? `/w/${store.width}` : \"\";\r\n    },\r\n\r\n    //高\r\n    height: null,\r\n    setHeight(height) {\r\n      store.height = height;\r\n    },\r\n    get heightStr() {\r\n      return store.height ? `/h/${store.height}` : \"\";\r\n    },\r\n    //拼接完整路径\r\n    get fullStr() {\r\n      return (\r\n        ImageStore.serverFile.attributes.url.attributes.url +\r\n        \"?imageView2/0\" +\r\n        store.widthStr +\r\n        store.heightStr\r\n      );\r\n    },\r\n  }));\r\n\r\n  const bindWidthChange = () => {\r\n    store.setWidth(ref1.current.value);\r\n  };\r\n\r\n  const bindHeightChange = () => {\r\n    store.setHeight(ref2.current.value);\r\n  };\r\n\r\n  const props = {\r\n    showUploadList: false, //是否展示文件列表\r\n    beforeUpload: (file) => {\r\n      //保存状态\r\n      ImageStore.setFile(file);\r\n      ImageStore.setFilename(file.name);\r\n\r\n      //判断用户是否登录\r\n      if (UserStore.currentUser === null) {\r\n        message.warning(\"请先登录再上传！\");\r\n        return false; //避免自动登录\r\n      }\r\n\r\n      //判断文件类型\r\n      if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/gi.test(file.type)) {\r\n        message.error(\"只能上传png/svg/jpg/gif格式的图片\");\r\n        return false;\r\n      }\r\n      //判断文件大小\r\n      if (file.size > 1024 * 1024) {\r\n        message.error(\"图片最大1M\");\r\n        return false;\r\n      }\r\n      ImageStore.upload()\r\n        .then((serverFile) => {\r\n          console.log(\"上传成功\");\r\n          console.log(serverFile);\r\n        })\r\n        .catch(() => {\r\n          console.log(\"上传失败\");\r\n        });\r\n      return false;\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Spin tip=\"上传中\" spinning={ImageStore.isUploading}>\r\n        <Dragger {...props}>\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <InboxOutlined />\r\n          </p>\r\n          <p className=\"ant-upload-text\">单击或拖拽上传图片</p>\r\n          <p className=\"ant-upload-hint\">\r\n            仅支持.png/.gif/.jpg/.svg格式的图片，图片最大1M\r\n          </p>\r\n        </Dragger>\r\n      </Spin>\r\n\r\n      {ImageStore.serverFile ? (\r\n        <Result>\r\n          <H1>上传结果</H1>\r\n          <dl>\r\n            <dt>线上地址</dt>\r\n            <dd>\r\n              <a\r\n                target=\"_blank\"\r\n                href={ImageStore.serverFile.attributes.url.attributes.url}\r\n              >\r\n                {ImageStore.serverFile.attributes.url.attributes.url}\r\n              </a>\r\n            </dd>\r\n\r\n            <dt>文件名</dt>\r\n            <dd>{ImageStore.filename}</dd>\r\n\r\n            <dt>图片预览</dt>\r\n            <dd>\r\n              <Image\r\n                src={ImageStore.serverFile.attributes.url.attributes.url}\r\n              />\r\n            </dd>\r\n\r\n            <dt>更多尺寸</dt>\r\n            <dd>\r\n              <input\r\n                ref={ref1}\r\n                onChange={bindWidthChange}\r\n                placeholder=\"最大宽度（可选）\"\r\n              />\r\n              <input\r\n                ref={ref2}\r\n                onChange={bindHeightChange}\r\n                placeholder=\"最大高度（可选）\"\r\n              />\r\n            </dd>\r\n            <dd>\r\n              <a target=\"_blanks\" href={store.fullStr}>\r\n                {store.fullStr}\r\n              </a>\r\n            </dd>\r\n          </dl>\r\n        </Result>\r\n      ) : null}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Component;\r\n","import React from \"react\";\r\nimport { useStores } from \"../stores\";\r\nimport { observer } from \"mobx-react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Tips = styled.div`\r\n  background: orange;\r\n  padding: 10px;\r\n  margin: 30px 0;\r\n  color: #fff;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst Component = observer(({ children }) => {\r\n  const { UserStore } = useStores();\r\n  return <>{UserStore.currentUser ? null : <Tips>{children}</Tips>}</>;\r\n});\r\n\r\nexport default Component;\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { useStores } from \"../stores\";\r\nimport Uploader from \"../components/Uploader\";\r\nimport Tips from \"../components/Tips\";\r\n\r\nconst Home = observer(() => {\r\n  const { UserStore } = useStores();\r\n\r\n  const User = () => <>Hello {UserStore.currentUser.attributes.username}</>;\r\n\r\n  return (\r\n    <>\r\n      <Tips children>请先登录再上传!!!</Tips>\r\n\r\n      <Uploader />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Home;\r\n"],"sourceRoot":""}